name: Update Epic Subtask
on:
  issues:
    types: [edited, labeled]
jobs:
  handle-epics:
    runs-on: ubuntu-latest
    steps:
      - name: Check if ACTION_TOKEN exists
        run: |
          if [ -z "${{ secrets.ACTION_TOKEN }}" ]; then
            echo "ACTION_TOKEN does not exist"
            exit 1
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check is has Epic label
        id: check-epic-label
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.ACTION_TOKEN}}
          script: |
            const label = context.payload.issue.labels.find(label => label.name === 'Epic')
            if (label) {
              return true
            }
            return false

      - name: Install dependencies
        if: steps.check-epic-label.outputs.result == 'true'
        run: |
          npm install @actions/github

      - name: Get issue number
        if: steps.check-epic-label.outputs.result == 'true'
        id: get_epic_issue_number
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.ACTION_TOKEN}}
          script: |
            const issueNumber = context.payload.issue.number
            return issueNumber

      - name: Log Epic issue number
        if: steps.check-epic-label.outputs.result == 'true'
        run: |
          echo "The Epic Issue number is: ${{steps.get_epic_issue_number.outputs.result}}"


      - name: Get issues mentioned in body
        if: steps.check-epic-label.outputs.result == 'true'
        id: get_subtasks
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.ACTION_TOKEN}}
          script: |
              const body = context.payload.issue.body
              const regex = /- \[ \] #(\d+)/g
              const issues = body.match(regex)
              const rawIssueIds = issues.map(match => parseInt(match.split("#")[1]));
              return rawIssueIds

      - name: Log sub tasks
        if: steps.check-epic-label.outputs.result == 'true'
        run: |
          echo "The sub taks are: ${{steps.get_subtasks.outputs.result}}"

      - name: Update Epic Subtask
        if: steps.check-epic-label.outputs.result == 'true'
        id: update-subtasks
        uses: actions/github-script@v5
        with:
          script: |
            const githubCore = require('@actions/github');

            const githubContext = githubCore.context;

            const octokit = githubCore.getOctokit({ auth: ${{ secrets.ACTION_TOKEN }} })
            const epicIssueNumber = ${{steps.get_epic_issue_number.outputs.result}};
            const subTaskIssueNumbers = ${{steps.get_subtasks.outputs.result}};

            const promises = subTaskIssueNumbers.map( subTaskIssueNumber => {
              return octokit.rest.issues.createComment({
                owner: githubContext.repo.owner,
                repo: githubContext.repo.repo,
                issue_number: subTaskIssueNumber,
                body: `This issue is part of Epic #${epicIssueNumber}`
                });
              });
            await Promise.all(promises);
